{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Skull-King-React\\\\src\\\\components\\\\GameOverPage\\\\GameOverPage.js\",\n    _s = $RefreshSig$();\n\nimport Button from '../UI/Button/Button';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport SecondaryHeader from '../UI/TitleHeader/TitleHeader';\nimport WinnerLabel from '../UI/Label/WinnerLabel';\nimport Label from '../UI/Label/Label';\nimport styles from './GameOverPage.module.css';\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../Contexts/AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport Scorecard from '../ScorecardPage/Scorecard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameOverPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [leaders, setLeaders] = useState([]);\n  const {\n    winner,\n    scoreboard\n  } = useContext(AppContext);\n  useEffect(() => {\n    const john = scoreboard.players;\n    setLeaders([...john].sort((a, b) => b.score - a.score));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameOverPage,\n      children: [/*#__PURE__*/_jsxDEV(TitleHeader, {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.scoreCard,\n        children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), leaders.map((player, ind) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            rank: ind + 1,\n            name: player.name,\n            score: player.score\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate('/');\n        },\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameOverPage, \"BpP2q2hZA3e8/tatb19E4qVwINc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GameOverPage;\n\nconst Row = _ref => {\n  let {\n    rank,\n    name,\n    score\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: rank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: styles.name,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Row;\nexport default GameOverPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameOverPage\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["C:/Workspace/Skull-King-React/src/components/GameOverPage/GameOverPage.js"],"names":["Button","MainView","TitleHeader","SecondaryHeader","WinnerLabel","Label","styles","useContext","useEffect","useState","AppContext","useNavigate","Scorecard","GameOverPage","navigate","leaders","setLeaders","winner","scoreboard","john","players","sort","a","b","score","gameOverPage","scoreCard","map","player","ind","name","id","Row","rank"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyBX,UAAU,CAACG,UAAD,CAAzC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,IAAI,GAAGD,UAAU,CAACE,OAAxB;AACAJ,IAAAA,UAAU,CAAC,CAAC,GAAGG,IAAJ,EAAUE,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAArC,CAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACmB,YAAvB;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAEnB,MAAM,CAACoB,SAAzB;AAAA,gCAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKX,OAAO,CAACY,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC1B,8BACI,QAAC,GAAD;AACI,YAAA,IAAI,EAAEA,GAAG,GAAG,CADhB;AAEI,YAAA,IAAI,EAAED,MAAM,CAACE,IAFjB;AAGI,YAAA,KAAK,EAAEF,MAAM,CAACJ;AAHlB,aAISI,MAAM,CAACG,EAJhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAqBI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAM;AACXjB,UAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA3CD;;GAAMD,Y;UACeF,W;;;KADfE,Y;;AA6CN,MAAMmB,GAAG,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,IAAF;AAAQH,IAAAA,IAAR;AAAcN,IAAAA;AAAd,GAA0B;AACnC,sBACI;AAAA,4BACI;AAAA,gBAAKS;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAE3B,MAAM,CAACwB,IAAtB;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;MAAMQ,G;AAUN,eAAenB,YAAf","sourcesContent":["import Button from '../UI/Button/Button';\r\nimport MainView from '../UI/MainView/MainView';\r\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\r\nimport SecondaryHeader from '../UI/TitleHeader/TitleHeader';\r\nimport WinnerLabel from '../UI/Label/WinnerLabel';\r\nimport Label from '../UI/Label/Label';\r\nimport styles from './GameOverPage.module.css';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../Contexts/AppContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Scorecard from '../ScorecardPage/Scorecard';\r\n\r\nconst GameOverPage = () => {\r\n    const navigate = useNavigate();\r\n    const [leaders, setLeaders] = useState([]);\r\n    const { winner, scoreboard } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        const john = scoreboard.players;\r\n        setLeaders([...john].sort((a, b) => b.score - a.score));\r\n    }, []);\r\n\r\n    return (\r\n        <MainView>\r\n            <div className={styles.gameOverPage}>\r\n                <TitleHeader>Results</TitleHeader>\r\n                <table className={styles.scoreCard}>\r\n                    {/* <Row name=\"Player\" score=\"Score\" /> */}\r\n                    <Row />\r\n                    {leaders.map((player, ind) => {\r\n                        return (\r\n                            <Row\r\n                                rank={ind + 1}\r\n                                name={player.name}\r\n                                score={player.score}\r\n                                key={player.id}\r\n                            />\r\n                        );\r\n                    })}\r\n                </table>\r\n                {/* <div>\r\n                    <WinnerLabel>{winner.name}</WinnerLabel>\r\n                    <Label>{winner.score}</Label>\r\n                </div> */}\r\n\r\n                <Button\r\n                    onClick={() => {\r\n                        navigate('/');\r\n                    }}\r\n                >\r\n                    HOME\r\n                </Button>\r\n            </div>\r\n        </MainView>\r\n    );\r\n};\r\n\r\nconst Row = ({ rank, name, score }) => {\r\n    return (\r\n        <tr>\r\n            <td>{rank}</td>\r\n            <td className={styles.name}>{name}</td>\r\n            <td>{score}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default GameOverPage;\r\n"]},"metadata":{},"sourceType":"module"}