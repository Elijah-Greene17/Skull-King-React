{"ast":null,"code":"var _jsxFileName = \"/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/CreateJoinPage/CreateJoinPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport Button from '../UI/Button/Button';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './CreateJoinPage.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Error from '../Error/Error'; // import socket from '../../Socket/Socket';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst CreateJoinPage = () => {\n  _s();\n\n  const {\n    name,\n    gameId,\n    setGameId,\n    error,\n    setError\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.createJoinPage,\n      children: [/*#__PURE__*/_jsxDEV(Error, {\n        message: error,\n        hidden: error.length === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TitleHeader, {\n        children: [\"Ahoy, \", name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n        value: gameId,\n        onChange: value => {\n          setGameId(value.toUpperCase());\n        },\n        case: \"upper\",\n        maxLength: 4,\n        children: \"Enter a Server Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            fetch('http://server-skull-king.herokuapp.com/createNewGame', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name\n              })\n            }).then(res => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                console.log('Error creating game');\n              }\n            }).then(data => {\n              console.log('EG Data: ', data.id);\n              setGameId(data.id);\n              setError('');\n              navigate('/lobby');\n            });\n          },\n          children: \"CREATE GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            fetch(`http://server-skull-king.herokuapp.com/idExists/${gameId}`).then(res => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                setError('Could not find server code');\n              }\n            }).then(data => {\n              console.log(data.idExists);\n\n              if (data.idExists) {\n                setError('');\n                navigate('/lobby');\n              } else {\n                setError('Could not find server code');\n              }\n            });\n          },\n          children: \"JOIN GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateJoinPage, \"4NLmSIk8AYgeEK8bvlsf8R98ByI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateJoinPage;\nexport default CreateJoinPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateJoinPage\");","map":{"version":3,"sources":["/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/CreateJoinPage/CreateJoinPage.js"],"names":["useContext","useState","useNavigate","AppContext","Button","ApplicationInput","MainView","TitleHeader","styles","toast","Error","configure","CreateJoinPage","name","gameId","setGameId","error","setError","navigate","createJoinPage","length","value","toUpperCase","fetch","method","headers","body","JSON","stringify","then","res","ok","json","console","log","data","id","idExists"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport Button from '../UI/Button/Button';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './CreateJoinPage.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Error from '../Error/Error';\n// import socket from '../../Socket/Socket';\n\ntoast.configure();\n\nconst CreateJoinPage = () => {\n    const { name, gameId, setGameId, error, setError } = useContext(AppContext);\n    const navigate = useNavigate();\n\n    return (\n        <MainView>\n            <div className={styles.createJoinPage}>\n                <Error message={error} hidden={error.length === 0} />\n                <TitleHeader>Ahoy, {name}!</TitleHeader>\n                <ApplicationInput\n                    value={gameId}\n                    onChange={(value) => {\n                        setGameId(value.toUpperCase());\n                    }}\n                    case=\"upper\"\n                    maxLength={4}\n                >\n                    Enter a Server Code\n                </ApplicationInput>\n                <div>\n                    <Button\n                        onClick={() => {\n                            fetch('http://server-skull-king.herokuapp.com/createNewGame', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                },\n                                body: JSON.stringify({\n                                    name: name,\n                                }),\n                            })\n                                .then((res) => {\n                                    if (res.ok) {\n                                        return res.json();\n                                    } else {\n                                        console.log('Error creating game');\n                                    }\n                                })\n                                .then((data) => {\n                                    console.log('EG Data: ', data.id);\n                                    setGameId(data.id);\n                                    setError('');\n                                    navigate('/lobby');\n                                });\n                        }}\n                    >\n                        CREATE GAME\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            fetch(`http://server-skull-king.herokuapp.com/idExists/${gameId}`)\n                                .then((res) => {\n                                    if (res.ok) {\n                                        return res.json();\n                                    } else {\n                                        setError('Could not find server code');\n                                    }\n                                })\n                                .then((data) => {\n                                    console.log(data.idExists);\n                                    if (data.idExists) {\n                                        setError('');\n                                        navigate('/lobby');\n                                    } else {\n                                        setError('Could not find server code');\n                                    }\n                                });\n                        }}\n                    >\n                        JOIN GAME\n                    </Button>\n                </div>\n            </div>\n        </MainView>\n    );\n};\n\nexport default CreateJoinPage;\n"]},"metadata":{},"sourceType":"module"}