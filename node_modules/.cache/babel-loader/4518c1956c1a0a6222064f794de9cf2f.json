{"ast":null,"code":"var _jsxFileName = \"/Users/elijahgreene/Workspace/Skull-King-React/src/components/CalculateScorePage/CalculateScorePage.js\",\n    _s = $RefreshSig$();\n\nimport MainView from '../UI/MainView/MainView';\nimport SecondaryHeader from '../UI/TitleHeader/SecondaryHeader';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport styles from './CalculateScorePage.module.css';\nimport Button from '../UI/Button/Button';\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport { useNavigate } from 'react-router-dom';\nimport Error from '../Error/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalculateScorePage = () => {\n  _s();\n\n  const {\n    id,\n    gameId,\n    error,\n    setError\n  } = useContext(AppContext);\n  const [tricks, setTricks] = useState();\n  const [bonus, setBonus] = useState(0);\n  const navigate = useNavigate();\n\n  const calculateScore = () => {\n    if (tricks && !isNaN(tricks) && !isNaN(bonus)) {\n      setError('');\n\n      if (!bonus) {\n        setBonus(0);\n      }\n\n      const data = {\n        playerId: id,\n        gameId,\n        tricks,\n        bonus: parseInt(bonus)\n      };\n      socket.emit('calculate', data);\n      navigate('/leaderboard');\n    } else {\n      if (!tricks) {\n        setError('Please enter the amount of tricks you won');\n      } else if (isNaN(tricks)) {\n        setError('The amount of tricks is not a number');\n      } else if (isNaN(bonus)) {\n        setError('The bonus points is not a number');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.calculateScorePage,\n      children: [/*#__PURE__*/_jsxDEV(Error, {\n        message: error,\n        hidden: error.length === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SecondaryHeader, {\n          children: \"How many tricks did you win?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n          onChange: value => {\n            setTricks(value);\n          },\n          maxLength: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SecondaryHeader, {\n          children: \"How many bonus points did you receive?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n          value: bonus,\n          onClick: value => {\n            if (value === '0') {\n              setBonus('');\n            }\n          },\n          onChange: value => {\n            setBonus(value);\n          },\n          onBlur: value => {\n            if (value === '') {\n              setBonus(0);\n            }\n          },\n          maxLength: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: calculateScore,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalculateScorePage, \"L1RPrGGR8qoS+c3sDd+Z+l+SfQU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalculateScorePage;\nexport default CalculateScorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateScorePage\");","map":{"version":3,"sources":["/Users/elijahgreene/Workspace/Skull-King-React/src/components/CalculateScorePage/CalculateScorePage.js"],"names":["MainView","SecondaryHeader","ApplicationInput","styles","Button","useContext","useState","AppContext","socket","useNavigate","Error","CalculateScorePage","id","gameId","error","setError","tricks","setTricks","bonus","setBonus","navigate","calculateScore","isNaN","data","playerId","parseInt","emit","calculateScorePage","length","value"],"mappings":"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","sourcesContent":["import MainView from '../UI/MainView/MainView';\nimport SecondaryHeader from '../UI/TitleHeader/SecondaryHeader';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport styles from './CalculateScorePage.module.css';\nimport Button from '../UI/Button/Button';\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport { useNavigate } from 'react-router-dom';\nimport Error from '../Error/Error';\n\nconst CalculateScorePage = () => {\n    const { id, gameId, error, setError } = useContext(AppContext);\n    const [tricks, setTricks] = useState();\n    const [bonus, setBonus] = useState(0);\n    const navigate = useNavigate();\n\n    const calculateScore = () => {\n        if (tricks && !isNaN(tricks) && !isNaN(bonus)) {\n            setError('');\n            if (!bonus) {\n                setBonus(0);\n            }\n            const data = {\n                playerId: id,\n                gameId,\n                tricks,\n                bonus: parseInt(bonus),\n            };\n            socket.emit('calculate', data);\n            navigate('/leaderboard');\n        } else {\n            if (!tricks) {\n                setError('Please enter the amount of tricks you won');\n            } else if (isNaN(tricks)) {\n                setError('The amount of tricks is not a number');\n            } else if (isNaN(bonus)) {\n                setError('The bonus points is not a number');\n            }\n        }\n    };\n\n    return (\n        <MainView>\n            <div className={styles.calculateScorePage}>\n                <Error message={error} hidden={error.length === 0} />\n                <div>\n                    <SecondaryHeader>\n                        How many tricks did you win?\n                    </SecondaryHeader>\n                    <ApplicationInput\n                        onChange={(value) => {\n                            setTricks(value);\n                        }}\n                        maxLength={2}\n                    />\n                </div>\n                <div>\n                    <SecondaryHeader>\n                        How many bonus points did you receive?\n                    </SecondaryHeader>\n                    <ApplicationInput\n                        value={bonus}\n                        onClick={(value) => {\n                            if (value === '0') {\n                                setBonus('');\n                            }\n                        }}\n                        onChange={(value) => {\n                            setBonus(value);\n                        }}\n                        onBlur={(value) => {\n                            if (value === '') {\n                                setBonus(0);\n                            }\n                        }}\n                        maxLength={3}\n                    />\n                </div>\n                <Button onClick={calculateScore}>NEXT</Button>\n            </div>\n        </MainView>\n    );\n};\n\nexport default CalculateScorePage;\n"]},"metadata":{},"sourceType":"module"}