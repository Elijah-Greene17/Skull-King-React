{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WS = void 0;\n\nconst transport_js_1 = require(\"../transport.js\");\n\nconst parseqs_1 = __importDefault(require(\"parseqs\"));\n\nconst yeast_1 = __importDefault(require(\"yeast\"));\n\nconst util_js_1 = require(\"../util.js\");\n\nconst websocket_constructor_js_1 = require(\"./websocket-constructor.js\");\n\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\n\n\nconst engine_io_parser_1 = require(\"engine.io-parser\");\n\nconst debug = (0, debug_1.default)(\"engine.io-client:websocket\"); // debug()\n// detect ReactNative environment\n\nconst isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends transport_js_1.Transport {\n  /**\r\n   * WebSocket transport constructor.\r\n   *\r\n   * @api {Object} connection options\r\n   * @api public\r\n   */\n  constructor(opts) {\n    super(opts);\n    this.supportsBinary = !opts.forceBase64;\n  }\n  /**\r\n   * Transport name.\r\n   *\r\n   * @api public\r\n   */\n\n\n  get name() {\n    return \"websocket\";\n  }\n  /**\r\n   * Opens socket.\r\n   *\r\n   * @api private\r\n   */\n\n\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n\n    const opts = isReactNative ? {} : (0, util_js_1.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws = websocket_constructor_js_1.usingBrowserWebSocket && !isReactNative ? protocols ? new websocket_constructor_js_1.WebSocket(uri, protocols) : new websocket_constructor_js_1.WebSocket(uri) : new websocket_constructor_js_1.WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || websocket_constructor_js_1.defaultBinaryType;\n    this.addEventListeners();\n  }\n  /**\r\n   * Adds event listeners to the socket\r\n   *\r\n   * @api private\r\n   */\n\n\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n\n      this.onOpen();\n    };\n\n    this.ws.onclose = this.onClose.bind(this);\n\n    this.ws.onmessage = ev => this.onData(ev.data);\n\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n  /**\r\n   * Writes data to socket.\r\n   *\r\n   * @param {Array} array of packets.\r\n   * @api private\r\n   */\n\n\n  write(packets) {\n    this.writable = false; // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n      (0, engine_io_parser_1.encodePacket)(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n\n        if (!websocket_constructor_js_1.usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (websocket_constructor_js_1.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          (0, websocket_constructor_js_1.nextTick)(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n  /**\r\n   * Closes socket.\r\n   *\r\n   * @api private\r\n   */\n\n\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  /**\r\n   * Generates uri for connection.\r\n   *\r\n   * @api private\r\n   */\n\n\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\"; // avoid port if default for schema\n\n    if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) {\n      port = \":\" + this.opts.port;\n    } // append timestamp to URI\n\n\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = (0, yeast_1.default)();\n    } // communicate binary support capabilities\n\n\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    const encodedQuery = parseqs_1.default.encode(query);\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n  }\n  /**\r\n   * Feature detection for WebSocket.\r\n   *\r\n   * @return {Boolean} whether this transport is available.\r\n   * @api public\r\n   */\n\n\n  check() {\n    return !!websocket_constructor_js_1.WebSocket && !(\"__initialize\" in websocket_constructor_js_1.WebSocket && this.name === WS.prototype.name);\n  }\n\n}\n\nexports.WS = WS;","map":{"version":3,"sources":["C:/Workspace/Skull-King-React/node_modules/engine.io-client/build/cjs/transports/websocket.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WS","transport_js_1","require","parseqs_1","yeast_1","util_js_1","websocket_constructor_js_1","debug_1","engine_io_parser_1","debug","default","isReactNative","navigator","product","toLowerCase","Transport","constructor","opts","supportsBinary","forceBase64","name","doOpen","check","uri","protocols","pick","extraHeaders","headers","ws","usingBrowserWebSocket","WebSocket","err","emit","binaryType","socket","defaultBinaryType","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","onClose","bind","onmessage","ev","onData","data","onerror","e","onError","write","packets","writable","i","length","packet","lastPacket","encodePacket","options","compress","perMessageDeflate","len","Buffer","byteLength","threshold","send","nextTick","setTimeoutFn","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","encode","ipv6","hostname","indexOf","path","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WS = void 0;\r\nconst transport_js_1 = require(\"../transport.js\");\r\nconst parseqs_1 = __importDefault(require(\"parseqs\"));\r\nconst yeast_1 = __importDefault(require(\"yeast\"));\r\nconst util_js_1 = require(\"../util.js\");\r\nconst websocket_constructor_js_1 = require(\"./websocket-constructor.js\");\r\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\r\nconst engine_io_parser_1 = require(\"engine.io-parser\");\r\nconst debug = (0, debug_1.default)(\"engine.io-client:websocket\"); // debug()\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nclass WS extends transport_js_1.Transport {\r\n    /**\r\n     * WebSocket transport constructor.\r\n     *\r\n     * @api {Object} connection options\r\n     * @api public\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    /**\r\n     * Transport name.\r\n     *\r\n     * @api public\r\n     */\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    /**\r\n     * Opens socket.\r\n     *\r\n     * @api private\r\n     */\r\n    doOpen() {\r\n        if (!this.check()) {\r\n            // let probe timeout\r\n            return;\r\n        }\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : (0, util_js_1.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws =\r\n                websocket_constructor_js_1.usingBrowserWebSocket && !isReactNative\r\n                    ? protocols\r\n                        ? new websocket_constructor_js_1.WebSocket(uri, protocols)\r\n                        : new websocket_constructor_js_1.WebSocket(uri)\r\n                    : new websocket_constructor_js_1.WebSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emit(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType || websocket_constructor_js_1.defaultBinaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @api private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = this.onClose.bind(this);\r\n        this.ws.onmessage = ev => this.onData(ev.data);\r\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\r\n    }\r\n    /**\r\n     * Writes data to socket.\r\n     *\r\n     * @param {Array} array of packets.\r\n     * @api private\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            (0, engine_io_parser_1.encodePacket)(packet, this.supportsBinary, data => {\r\n                // always create a new object (GH-437)\r\n                const opts = {};\r\n                if (!websocket_constructor_js_1.usingBrowserWebSocket) {\r\n                    if (packet.options) {\r\n                        opts.compress = packet.options.compress;\r\n                    }\r\n                    if (this.opts.perMessageDeflate) {\r\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\r\n                        if (len < this.opts.perMessageDeflate.threshold) {\r\n                            opts.compress = false;\r\n                        }\r\n                    }\r\n                }\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    if (websocket_constructor_js_1.usingBrowserWebSocket) {\r\n                        // TypeError is thrown when passing the second argument on Safari\r\n                        this.ws.send(data);\r\n                    }\r\n                    else {\r\n                        this.ws.send(data, opts);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    debug(\"websocket closed before onclose event\");\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    (0, websocket_constructor_js_1.nextTick)(() => {\r\n                        this.writable = true;\r\n                        this.emit(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Closes socket.\r\n     *\r\n     * @api private\r\n     */\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @api private\r\n     */\r\n    uri() {\r\n        let query = this.query || {};\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        let port = \"\";\r\n        // avoid port if default for schema\r\n        if (this.opts.port &&\r\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\r\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\r\n            port = \":\" + this.opts.port;\r\n        }\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = (0, yeast_1.default)();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        const encodedQuery = parseqs_1.default.encode(query);\r\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\r\n        return (schema +\r\n            \"://\" +\r\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\r\n            port +\r\n            this.opts.path +\r\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\r\n    }\r\n    /**\r\n     * Feature detection for WebSocket.\r\n     *\r\n     * @return {Boolean} whether this transport is available.\r\n     * @api public\r\n     */\r\n    check() {\r\n        return (!!websocket_constructor_js_1.WebSocket &&\r\n            !(\"__initialize\" in websocket_constructor_js_1.WebSocket && this.name === WS.prototype.name));\r\n    }\r\n}\r\nexports.WS = WS;\r\n"]},"metadata":{},"sourceType":"script"}