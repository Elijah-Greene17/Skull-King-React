{"ast":null,"code":"var _jsxFileName = \"/Users/elijahgreene/Workspace/Skull-King-React/src/components/LeaderBoardPage/LeaderBoardPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport PlayerList from '../PlayerList/PlayerList';\nimport Button from '../UI/Button/Button';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './LeaderBoardPage.module.css';\nimport socket from '../../Socket/Socket';\nimport Label from '../UI/Label/Label';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeaderBoardPage = () => {\n  _s();\n\n  const {\n    id,\n    setId,\n    name,\n    gameId,\n    host,\n    setHost,\n    playerList,\n    setPlayerList,\n    currentRound,\n    setCurrentRound,\n    scoreboard,\n    setScoreboard,\n    setWinner,\n    setHarryToggle,\n    setRascalToggle\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const [leaders, setLeaders] = useState([]);\n  useEffect(() => {\n    socket.on('leaderboard', data => {\n      const john = data.players.players;\n      console.log('JOHN: ', john);\n      setLeaders([...john].sort((a, b) => b.score - a.score));\n    });\n    fetch(`https://server-skull-king.herokuapp.com/updateLeaderBoard/${localStorage.getItem('skGameId')}`).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {}\n    }).then(data => {\n      if (data) {\n        console.log(\"Success\");\n      }\n    });\n    socket.on('isRoundOver', data => {\n      console.log('DATA: ', data);\n      setScoreboard(data.scoreBoard);\n      console.log(\"EGGGGG: \", localStorage.getItem('skScoreboard'));\n      localStorage.setItem('skScoreboard', data.scoreBoard);\n\n      if (data.gameIsOver) {\n        setHarryToggle(true);\n        localStorage.setItem('skHarryToggle', true);\n        setRascalToggle(true);\n        localStorage.setItem('skRascalToggle', true);\n        localStorage.removeItem('skGameId');\n        localStorage.removeItem('skPlayerId');\n        navigate('/gameover');\n      } else if (data.roundIsOver) {\n        setHarryToggle(true);\n        localStorage.setItem('skHarryToggle', true);\n        setRascalToggle(true);\n        localStorage.setItem('skRascalToggle', true);\n        localStorage.setItem('skCurrentRound', currentRound + 1);\n        setCurrentRound(currentRound + 1);\n        navigate('/bid');\n      } else {\n        console.log('round not over');\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (leaders.length > 0) {\n      console.log('LEADERS: ', leaders[0].name);\n      setWinner(leaders[0]);\n      localStorage.setItem('skWinner', leaders[0]);\n    }\n  }, [leaders]);\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leaderBoardPage,\n      children: [/*#__PURE__*/_jsxDEV(TitleHeader, {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.scoreCard,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          name: \"Player\",\n          score: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), leaders.map(player => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            name: player.name,\n            score: player.score\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: id === host ? leaders.length === playerList.length ? /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.button,\n          onClick: () => {\n            socket.emit('isRoundOver', {\n              gameId: gameId\n            });\n          },\n          children: \"Next Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Label, {\n          className: styles.waitingLabel,\n          children: \"Waiting for everyone...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Label, {\n          className: styles.waitingLabel,\n          children: \"Waiting for next round...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeaderBoardPage, \"arlNG0n47o/KjBIP8+z/uYwDwqo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LeaderBoardPage;\n\nconst Row = _ref => {\n  let {\n    name,\n    score\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Row;\nexport default LeaderBoardPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LeaderBoardPage\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["/Users/elijahgreene/Workspace/Skull-King-React/src/components/LeaderBoardPage/LeaderBoardPage.js"],"names":["useContext","useEffect","useState","useNavigate","AppContext","PlayerList","Button","ApplicationInput","MainView","TitleHeader","styles","socket","Label","LeaderBoardPage","id","setId","name","gameId","host","setHost","playerList","setPlayerList","currentRound","setCurrentRound","scoreboard","setScoreboard","setWinner","setHarryToggle","setRascalToggle","navigate","leaders","setLeaders","on","data","john","players","console","log","sort","a","b","score","fetch","localStorage","getItem","then","res","ok","json","scoreBoard","setItem","gameIsOver","removeItem","roundIsOver","length","leaderBoardPage","scoreCard","map","player","button","emit","waitingLabel","Row"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport PlayerList from '../PlayerList/PlayerList';\nimport Button from '../UI/Button/Button';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './LeaderBoardPage.module.css';\nimport socket from '../../Socket/Socket';\nimport Label from '../UI/Label/Label';\n\nconst LeaderBoardPage = () => {\n    const {\n        id,\n        setId,\n        name,\n        gameId,\n        host,\n        setHost,\n        playerList,\n        setPlayerList,\n        currentRound,\n        setCurrentRound,\n        scoreboard,\n        setScoreboard,\n        setWinner,\n        setHarryToggle,\n        setRascalToggle,\n    } = useContext(AppContext);\n    const navigate = useNavigate();\n\n    const [leaders, setLeaders] = useState([]);\n\n    useEffect(() => {\n        socket.on('leaderboard', (data) => {\n            const john = data.players.players;\n            console.log('JOHN: ', john);\n            setLeaders([...john].sort((a, b) => b.score - a.score));\n        });\n\n        fetch(`https://server-skull-king.herokuapp.com/updateLeaderBoard/${localStorage.getItem('skGameId')}`)\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                }\n            })\n            .then((data) => {\n                if (data) {\n                    console.log(\"Success\")\n                }\n            });\n\n        socket.on('isRoundOver', (data) => {\n            console.log('DATA: ', data);\n            setScoreboard(data.scoreBoard);\n            console.log(\"EGGGGG: \", localStorage.getItem('skScoreboard'))\n            localStorage.setItem('skScoreboard', data.scoreBoard)\n            if (data.gameIsOver) {\n                setHarryToggle(true);\n                localStorage.setItem('skHarryToggle', true)\n                setRascalToggle(true);\n                localStorage.setItem('skRascalToggle', true)\n                localStorage.removeItem('skGameId')\n                localStorage.removeItem('skPlayerId')\n                navigate('/gameover');\n            } else if (data.roundIsOver) {\n                setHarryToggle(true);\n                localStorage.setItem('skHarryToggle', true)\n                setRascalToggle(true);\n                localStorage.setItem('skRascalToggle', true)\n                localStorage.setItem('skCurrentRound', currentRound + 1)\n                setCurrentRound(currentRound + 1);\n                navigate('/bid');\n            } else {\n                console.log('round not over');\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        if (leaders.length > 0) {\n            console.log('LEADERS: ', leaders[0].name);\n            setWinner(leaders[0]);\n            localStorage.setItem('skWinner', leaders[0])\n        }\n    }, [leaders]);\n\n    return (\n        <MainView>\n            <div className={styles.leaderBoardPage}>\n                <TitleHeader>Leaderboard</TitleHeader>\n                <table className={styles.scoreCard}>\n                    <Row name=\"Player\" score=\"Score\" />\n                    <Row />\n                    {leaders.map((player) => {\n                        return (\n                            <Row\n                                name={player.name}\n                                score={player.score}\n                                key={player.id}\n                            />\n                        );\n                    })}\n                </table>\n                <div>\n                    {id === host ? (\n                        leaders.length === playerList.length ? (\n                            <Button\n                                className={styles.button}\n                                onClick={() => {\n                                    socket.emit('isRoundOver', {\n                                        gameId: gameId,\n                                    });\n                                }}\n                            >\n                                Next Round\n                            </Button>\n                        ) : (\n                            <Label className={styles.waitingLabel}>\n                                Waiting for everyone...\n                            </Label>\n                        )\n                    ) : (\n                        <Label className={styles.waitingLabel}>\n                            Waiting for next round...\n                        </Label>\n                    )}\n                </div>\n            </div>\n        </MainView>\n    );\n};\n\nconst Row = ({ name, score }) => {\n    return (\n        <tr>\n            <td>{name}</td>\n            <td>{score}</td>\n        </tr>\n    );\n};\n\nexport default LeaderBoardPage;\n"]},"metadata":{},"sourceType":"module"}