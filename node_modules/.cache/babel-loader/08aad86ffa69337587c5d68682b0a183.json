{"ast":null,"code":"\"use strict\";\n/* global attachEvent */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Request = exports.XHR = void 0;\n\nconst xmlhttprequest_js_1 = __importDefault(require(\"./xmlhttprequest.js\"));\n\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\n\n\nconst globalThis_js_1 = __importDefault(require(\"../globalThis.js\"));\n\nconst util_js_1 = require(\"../util.js\");\n\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\n\nconst polling_js_1 = require(\"./polling.js\");\n\nconst debug = (0, debug_1.default)(\"engine.io-client:polling-xhr\"); // debug()\n\n/**\r\n * Empty function\r\n */\n\nfunction empty() {}\n\nconst hasXHR2 = function () {\n  const xhr = new xmlhttprequest_js_1.default({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nclass XHR extends polling_js_1.Polling {\n  /**\r\n   * XHR Polling constructor.\r\n   *\r\n   * @param {Object} opts\r\n   * @api public\r\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\r\n     * XHR supports binary\r\n     */\n\n\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n  /**\r\n   * Creates a request.\r\n   *\r\n   * @param {String} method\r\n   * @api private\r\n   */\n\n\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n  /**\r\n   * Sends data.\r\n   *\r\n   * @param {String} data to send.\r\n   * @param {Function} called upon flush.\r\n   * @api private\r\n   */\n\n\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n  /**\r\n   * Starts a poll cycle.\r\n   *\r\n   * @api private\r\n   */\n\n\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n\n}\n\nexports.XHR = XHR;\n\nclass Request extends component_emitter_1.Emitter {\n  /**\r\n   * Request constructor\r\n   *\r\n   * @param {Object} options\r\n   * @api public\r\n   */\n  constructor(uri, opts) {\n    super();\n    (0, util_js_1.installTimerFunctions)(this, opts);\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n  /**\r\n   * Creates the XHR object and sends the request.\r\n   *\r\n   * @api private\r\n   */\n\n\n  create() {\n    const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new xmlhttprequest_js_1.default(opts);\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {} // ie6 check\n\n\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      xhr.onreadystatechange = () => {\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          this.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          this.setTimeoutFn(() => {\n            this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n          }, 0);\n        }\n      };\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n  /**\r\n   * Called upon successful response.\r\n   *\r\n   * @api private\r\n   */\n\n\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n  /**\r\n   * Called if we have data.\r\n   *\r\n   * @api private\r\n   */\n\n\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n  /**\r\n   * Called upon error.\r\n   *\r\n   * @api private\r\n   */\n\n\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n  /**\r\n   * Cleans up house.\r\n   *\r\n   * @api private\r\n   */\n\n\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n\n    this.xhr.onreadystatechange = empty;\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n  /**\r\n   * Called upon load.\r\n   *\r\n   * @api private\r\n   */\n\n\n  onLoad() {\n    const data = this.xhr.responseText;\n\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n  /**\r\n   * Aborts the request.\r\n   *\r\n   * @api public\r\n   */\n\n\n  abort() {\n    this.cleanup();\n  }\n\n}\n\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis_js_1.default ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Workspace/Skull-King-React/node_modules/engine.io-client/build/cjs/transports/polling-xhr.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Request","XHR","xmlhttprequest_js_1","require","debug_1","globalThis_js_1","util_js_1","component_emitter_1","polling_js_1","debug","default","empty","hasXHR2","xhr","xdomain","responseType","Polling","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","assign","uri","doWrite","data","fn","req","method","on","err","onError","doPoll","onData","bind","pollXhr","Emitter","installTimerFunctions","async","undefined","create","pick","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/* global attachEvent */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Request = exports.XHR = void 0;\r\nconst xmlhttprequest_js_1 = __importDefault(require(\"./xmlhttprequest.js\"));\r\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\r\nconst globalThis_js_1 = __importDefault(require(\"../globalThis.js\"));\r\nconst util_js_1 = require(\"../util.js\");\r\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\r\nconst polling_js_1 = require(\"./polling.js\");\r\nconst debug = (0, debug_1.default)(\"engine.io-client:polling-xhr\"); // debug()\r\n/**\r\n * Empty function\r\n */\r\nfunction empty() { }\r\nconst hasXHR2 = (function () {\r\n    const xhr = new xmlhttprequest_js_1.default({\r\n        xdomain: false\r\n    });\r\n    return null != xhr.responseType;\r\n})();\r\nclass XHR extends polling_js_1.Polling {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @api public\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n            this.xs = opts.secure !== isSSL;\r\n        }\r\n        /**\r\n         * XHR supports binary\r\n         */\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n    }\r\n    /**\r\n     * Creates a request.\r\n     *\r\n     * @param {String} method\r\n     * @api private\r\n     */\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\r\n        return new Request(this.uri(), opts);\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @api private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", err => {\r\n            this.onError(\"xhr post error\", err);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @api private\r\n     */\r\n    doPoll() {\r\n        debug(\"xhr poll\");\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", err => {\r\n            this.onError(\"xhr poll error\", err);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nexports.XHR = XHR;\r\nclass Request extends component_emitter_1.Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @api public\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        (0, util_js_1.installTimerFunctions)(this, opts);\r\n        this.opts = opts;\r\n        this.method = opts.method || \"GET\";\r\n        this.uri = uri;\r\n        this.async = false !== opts.async;\r\n        this.data = undefined !== opts.data ? opts.data : null;\r\n        this.create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @api private\r\n     */\r\n    create() {\r\n        const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this.opts.xd;\r\n        opts.xscheme = !!this.opts.xs;\r\n        const xhr = (this.xhr = new xmlhttprequest_js_1.default(opts));\r\n        try {\r\n            debug(\"xhr open %s: %s\", this.method, this.uri);\r\n            xhr.open(this.method, this.uri, this.async);\r\n            try {\r\n                if (this.opts.extraHeaders) {\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this.opts.extraHeaders) {\r\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this.method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this.opts.withCredentials;\r\n            }\r\n            if (this.opts.requestTimeout) {\r\n                xhr.timeout = this.opts.requestTimeout;\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this.onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            debug(\"xhr data %s\", this.data);\r\n            xhr.send(this.data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this.onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this.index = Request.requestsCount++;\r\n            Request.requests[this.index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon successful response.\r\n     *\r\n     * @api private\r\n     */\r\n    onSuccess() {\r\n        this.emit(\"success\");\r\n        this.cleanup();\r\n    }\r\n    /**\r\n     * Called if we have data.\r\n     *\r\n     * @api private\r\n     */\r\n    onData(data) {\r\n        this.emit(\"data\", data);\r\n        this.onSuccess();\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @api private\r\n     */\r\n    onError(err) {\r\n        this.emit(\"error\", err);\r\n        this.cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @api private\r\n     */\r\n    cleanup(fromError) {\r\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n            return;\r\n        }\r\n        this.xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this.xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this.index];\r\n        }\r\n        this.xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @api private\r\n     */\r\n    onLoad() {\r\n        const data = this.xhr.responseText;\r\n        if (data !== null) {\r\n            this.onData(data);\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @api public\r\n     */\r\n    abort() {\r\n        this.cleanup();\r\n    }\r\n}\r\nexports.Request = Request;\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in globalThis_js_1.default ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}