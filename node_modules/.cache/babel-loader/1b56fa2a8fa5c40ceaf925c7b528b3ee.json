{"ast":null,"code":"var _jsxFileName = \"/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/CalculateScorePage/CalculateScorePage.js\",\n    _s = $RefreshSig$();\n\nimport MainView from '../UI/MainView/MainView';\nimport SecondaryHeader from '../UI/TitleHeader/SecondaryHeader';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport styles from './CalculateScorePage.module.css';\nimport Button from '../UI/Button/Button';\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalculateScorePage = () => {\n  _s();\n\n  const {\n    id,\n    gameId,\n    currentRound,\n    scoreboard\n  } = useContext(AppContext);\n  const [tricks, setTricks] = useState();\n  const [bonus, setBonus] = useState(0);\n  const navigate = useNavigate();\n\n  const calculateScore = () => {\n    // const pBid = getBid();\n    // console.log(pBid);\n    if (tricks && !isNaN(tricks) && !isNaN(bonus)) {\n      if (!bonus) {\n        setBonus(0);\n      }\n\n      const data = {\n        playerId: id,\n        gameId,\n        tricks,\n        bonus\n      };\n      console.log('DATA: ', data);\n      socket.emit('calculate', data);\n      navigate('/leaderboard');\n    } else {\n      console.log('Error with tricks and bonus');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.calculateScorePage,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SecondaryHeader, {\n          children: \"How many tricks did you win?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n          onChange: value => {\n            setTricks(value);\n          },\n          maxLength: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SecondaryHeader, {\n          children: \"How many bonus points did you receive?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n          value: bonus,\n          onChange: value => {\n            setBonus(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: calculateScore,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalculateScorePage, \"2vMqub2JVjujAhiWtnKwOdCLK64=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalculateScorePage;\nexport default CalculateScorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateScorePage\");","map":{"version":3,"sources":["/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/CalculateScorePage/CalculateScorePage.js"],"names":["MainView","SecondaryHeader","ApplicationInput","styles","Button","useContext","useState","AppContext","socket","useNavigate","CalculateScorePage","id","gameId","currentRound","scoreboard","tricks","setTricks","bonus","setBonus","navigate","calculateScore","isNaN","data","playerId","console","log","emit","calculateScorePage","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA2CT,UAAU,CAACE,UAAD,CAA3D;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,cAAc,GAAG,MAAM;AACzB;AACA;AACA,QAAIL,MAAM,IAAI,CAACM,KAAK,CAACN,MAAD,CAAhB,IAA4B,CAACM,KAAK,CAACJ,KAAD,CAAtC,EAA+C;AAC3C,UAAI,CAACA,KAAL,EAAY;AACRC,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACH;;AACD,YAAMI,IAAI,GAAG;AACTC,QAAAA,QAAQ,EAAEZ,EADD;AAETC,QAAAA,MAFS;AAGTG,QAAAA,MAHS;AAITE,QAAAA;AAJS,OAAb;AAMAO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACAd,MAAAA,MAAM,CAACkB,IAAP,CAAY,WAAZ,EAAyBJ,IAAzB;AACAH,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH,KAbD,MAaO;AACHK,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ,GAnBD;;AAqBA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEtB,MAAM,CAACwB,kBAAvB;AAAA,8BACI;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,gBAAD;AACI,UAAA,QAAQ,EAAGC,KAAD,IAAW;AACjBZ,YAAAA,SAAS,CAACY,KAAD,CAAT;AACH,WAHL;AAII,UAAA,SAAS,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,gBAAD;AACI,UAAA,KAAK,EAAEX,KADX;AAEI,UAAA,QAAQ,EAAGW,KAAD,IAAW;AACjBV,YAAAA,QAAQ,CAACU,KAAD,CAAR;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAER,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAxDD;;GAAMV,kB;UAIeD,W;;;KAJfC,kB;AA0DN,eAAeA,kBAAf","sourcesContent":["import MainView from '../UI/MainView/MainView';\nimport SecondaryHeader from '../UI/TitleHeader/SecondaryHeader';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport styles from './CalculateScorePage.module.css';\nimport Button from '../UI/Button/Button';\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport { useNavigate } from 'react-router-dom';\n\nconst CalculateScorePage = () => {\n    const { id, gameId, currentRound, scoreboard } = useContext(AppContext);\n    const [tricks, setTricks] = useState();\n    const [bonus, setBonus] = useState(0);\n    const navigate = useNavigate();\n\n    const calculateScore = () => {\n        // const pBid = getBid();\n        // console.log(pBid);\n        if (tricks && !isNaN(tricks) && !isNaN(bonus)) {\n            if (!bonus) {\n                setBonus(0);\n            }\n            const data = {\n                playerId: id,\n                gameId,\n                tricks,\n                bonus,\n            };\n            console.log('DATA: ', data);\n            socket.emit('calculate', data);\n            navigate('/leaderboard');\n        } else {\n            console.log('Error with tricks and bonus');\n        }\n    };\n\n    return (\n        <MainView>\n            <div className={styles.calculateScorePage}>\n                <div>\n                    <SecondaryHeader>\n                        How many tricks did you win?\n                    </SecondaryHeader>\n                    <ApplicationInput\n                        onChange={(value) => {\n                            setTricks(value);\n                        }}\n                        maxLength={2}\n                    />\n                </div>\n                <div>\n                    <SecondaryHeader>\n                        How many bonus points did you receive?\n                    </SecondaryHeader>\n                    <ApplicationInput\n                        value={bonus}\n                        onChange={(value) => {\n                            setBonus(value);\n                        }}\n                    />\n                </div>\n                <Button onClick={calculateScore}>NEXT</Button>\n            </div>\n        </MainView>\n    );\n};\n\nexport default CalculateScorePage;\n"]},"metadata":{},"sourceType":"module"}