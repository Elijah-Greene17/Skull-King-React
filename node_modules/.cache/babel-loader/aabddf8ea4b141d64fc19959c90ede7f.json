{"ast":null,"code":"var _jsxFileName = \"/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/BidPage/BidPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport Button from '../UI/Button/Button';\nimport Label from '../UI/Label/Label';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './BidPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BidPage = () => {\n  _s();\n\n  const {\n    id,\n    gameId,\n    currentRound,\n    setScoreboard\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const [bid, setBid] = useState();\n  const [bidEntered, setBidEntered] = useState(false);\n  useEffect(() => {\n    socket.on('bidsAreIn', data => {\n      console.log('DATA.SCOREBOARD: ', data.scoreBoard);\n      setScoreboard(data.scoreBoard);\n      navigate('/scorecard');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainView, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bidPage,\n      children: [/*#__PURE__*/_jsxDEV(TitleHeader, {\n        children: [\"Round \", currentRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ApplicationInput, {\n        onChange: value => {\n          setBid(value);\n        },\n        maxLength: 2,\n        type: \"number\",\n        children: \"Input Bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), bidEntered ? /*#__PURE__*/_jsxDEV(Label, {\n        className: styles.waitingLabel,\n        children: \"Bid locked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          if (isNaN(bid)) {\n            console.log('Error, the bid is not a number');\n          } else {\n            const data = {\n              playerId: id,\n              gameId: gameId,\n              bid: bid\n            };\n            socket.emit('bid', data);\n            setBidEntered(true);\n          }\n        },\n        children: \"BID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BidPage, \"vzY8/LREhHgOhp2zqBEdj2109Q4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BidPage;\nexport default BidPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BidPage\");","map":{"version":3,"sources":["/Users/elijahgreene/Workspace/Skull-King-React/skull-king/src/components/BidPage/BidPage.js"],"names":["useContext","useEffect","useState","useNavigate","AppContext","socket","Button","Label","ApplicationInput","MainView","TitleHeader","styles","BidPage","id","gameId","currentRound","setScoreboard","navigate","bid","setBid","bidEntered","setBidEntered","on","data","console","log","scoreBoard","bidPage","value","waitingLabel","isNaN","playerId","emit"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA8ChB,UAAU,CAACI,UAAD,CAA9D;AACA,QAAMa,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,EAA9B;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACiB,EAAP,CAAU,WAAV,EAAwBC,IAAD,IAAU;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAI,CAACG,UAAtC;AACAV,MAAAA,aAAa,CAACO,IAAI,CAACG,UAAN,CAAb;AACAT,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACgB,OAAvB;AAAA,8BACI,QAAC,WAAD;AAAA,6BAAoBZ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,gBAAD;AACI,QAAA,QAAQ,EAAGa,KAAD,IAAW;AACjBT,UAAAA,MAAM,CAACS,KAAD,CAAN;AACH,SAHL;AAII,QAAA,SAAS,EAAE,CAJf;AAKI,QAAA,IAAI,EAAC,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAWKR,UAAU,gBACP,QAAC,KAAD;AAAO,QAAA,SAAS,EAAET,MAAM,CAACkB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAM;AACX,cAAIC,KAAK,CAACZ,GAAD,CAAT,EAAgB;AACZM,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,WAFD,MAEO;AACH,kBAAMF,IAAI,GAAG;AACTQ,cAAAA,QAAQ,EAAElB,EADD;AAETC,cAAAA,MAAM,EAAEA,MAFC;AAGTI,cAAAA,GAAG,EAAEA;AAHI,aAAb;AAKAb,YAAAA,MAAM,CAAC2B,IAAP,CAAY,KAAZ,EAAmBT,IAAnB;AACAF,YAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,SAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CApDD;;GAAMT,O;UAEeT,W;;;KAFfS,O;AAsDN,eAAeA,OAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppContext } from '../../Contexts/AppContext';\nimport socket from '../../Socket/Socket';\nimport Button from '../UI/Button/Button';\nimport Label from '../UI/Label/Label';\nimport ApplicationInput from '../UI/Input/ApplicationInput';\nimport MainView from '../UI/MainView/MainView';\nimport TitleHeader from '../UI/TitleHeader/TitleHeader';\nimport styles from './BidPage.module.css';\n\nconst BidPage = () => {\n    const { id, gameId, currentRound, setScoreboard } = useContext(AppContext);\n    const navigate = useNavigate();\n\n    const [bid, setBid] = useState();\n    const [bidEntered, setBidEntered] = useState(false);\n\n    useEffect(() => {\n        socket.on('bidsAreIn', (data) => {\n            console.log('DATA.SCOREBOARD: ', data.scoreBoard);\n            setScoreboard(data.scoreBoard);\n            navigate('/scorecard');\n        });\n    }, []);\n\n    return (\n        <MainView>\n            <div className={styles.bidPage}>\n                <TitleHeader>Round {currentRound}</TitleHeader>\n                <ApplicationInput\n                    onChange={(value) => {\n                        setBid(value);\n                    }}\n                    maxLength={2}\n                    type=\"number\"\n                >\n                    Input Bid\n                </ApplicationInput>\n                {bidEntered ? (\n                    <Label className={styles.waitingLabel}>Bid locked</Label>\n                ) : (\n                    <Button\n                        onClick={() => {\n                            if (isNaN(bid)) {\n                                console.log('Error, the bid is not a number');\n                            } else {\n                                const data = {\n                                    playerId: id,\n                                    gameId: gameId,\n                                    bid: bid,\n                                };\n                                socket.emit('bid', data);\n                                setBidEntered(true);\n                            }\n                        }}\n                    >\n                        BID\n                    </Button>\n                )}\n            </div>\n        </MainView>\n    );\n};\n\nexport default BidPage;\n"]},"metadata":{},"sourceType":"module"}